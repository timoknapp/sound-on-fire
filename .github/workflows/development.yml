on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - ".github/**"
      - "android/**"
      - "lib/**"
      - "test/**"
      - "pubspec.yaml"
  pull_request:
    branches:
      - master
name: Development
jobs:
  build:
    name: Prepare-Build-Upload
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore Keystore
        if: github.repository == 'timoknapp/sound-on-fire'
        run: |
          echo "${{ secrets.KEYSTORE }}" > sound-on-fire.jks.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_PASSPHRASE }}" --batch sound-on-fire.jks.asc > android/sound-on-fire.jks

      - name: VB Step 1
        if: github.ref != 'refs/heads/master' && github.repository == 'timoknapp/sound-on-fire'
        run: ./.github/scripts/bumpVersion.sh

      - name: VB Step 2
        if: github.ref != 'refs/heads/master' && github.repository == 'timoknapp/sound-on-fire'
        uses: EndBug/add-and-commit@v4
        with:
          author_name: timoknapp
          author_email: mail@timoknapp.com
          message: "chore(version): bump commit hash"
          add: "pubspec.yaml"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.3'
          channel: "stable" # or: 'dev' or 'beta'

      - name: Prepare & Build
        id: prepare-build
        run: |
          flutter --version
          
          ./.github/scripts/buildAndroid.sh beta "${{ secrets.KEYSTORE_PASSWORD }}" "${{ secrets.KEY_PASSWORD }}" "${{ secrets.KEY_ALIAS }}" "${{ secrets.APP_CENTER_SECRET }}"
          echo "artifact-filepath=$(cat tmp_artifact_path.txt)" >> $GITHUB_OUTPUT
          echo "artifact-filename=$(cat tmp_artifact_name.txt)" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.prepare-build.outputs.artifact-filename }}
          path: ${{ steps.prepare-build.outputs.artifact-filepath }}

# TEST ----------------
      # - name: Upload Release Asset Version
      #   id: upload-release-asset-version
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create-release-version.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
      #     asset_path: ${{ steps.prepare-build.outputs.artifact-filepath }}
      #     asset_name: ${{ steps.prepare-build.outputs.artifact-filename }}
      #     asset_content_type: application/apk

      - name: Test Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: test
          name: test release
          draft: true
          prerelease: true
          body: ${{ steps.semrel.outputs.changelog }}
          files: ${{ steps.prepare-build.outputs.artifact-filepath }}
